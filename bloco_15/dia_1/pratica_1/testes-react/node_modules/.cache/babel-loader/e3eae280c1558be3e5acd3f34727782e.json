{"ast":null,"code":"var _jsxFileName = \"/home/denis/Documentos/Trybe_Exercises/bloco_15/dia_1/pratica_1/testes-react/src/ValidEmail.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst verifyEmail = email => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = props => {\n  const {\n    email\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      \"data-testid\": \"id-email-user\",\n      children: `Valor: ${email}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      \"data-testid\": \"validation-email\",\n      children: verifyEmail(email) ? 'Email Valido' : 'Email Inválido'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ValidEmail;\nexport default ValidEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidEmail\");","map":{"version":3,"sources":["/home/denis/Documentos/Trybe_Exercises/bloco_15/dia_1/pratica_1/testes-react/src/ValidEmail.jsx"],"names":["React","verifyEmail","email","emailRegex","test","ValidEmail","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,UAAU,GAAG,yCAAnB;AACA,SAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;AACD,CAHD;;AAKA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEJ,IAAAA;AAAF,MAAYI,KAAlB;AACA,sBACE;AAAA,4BACE;AAAI,qBAAY,eAAhB;AAAA,gBAAkC,UAASJ,KAAM;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,qBAAY,kBAAhB;AAAA,gBAAqCD,WAAW,CAACC,KAAD,CAAX,GAAqB,cAArB,GAAsC;AAA3E;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARD;;KAAMG,U;AAUN,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\nconst verifyEmail = (email) => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = (props) => {\n  const { email } = props;\n  return (\n    <div>\n      <h2 data-testid=\"id-email-user\">{`Valor: ${email}`}</h2>\n      <h3 data-testid=\"validation-email\">{(verifyEmail(email) ? 'Email Valido' : 'Email Inválido')}</h3>\n    </div>\n  );\n};\n\nexport default ValidEmail;"]},"metadata":{},"sourceType":"module"}