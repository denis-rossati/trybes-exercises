use("erp");
/* 
Exercício 1 : Utilize uma combinação das expressões aritméticas e adicione um campo chamado idade à coleção clientes 
db.clientes.aggregate([
  {
    $set: {
      "idade": {
        $floor: {
          $divide: [
            {
              $subtract: [
                new Date(),
                "$dataNascimento",
              ],
            },
            86400000 * 365,
          ],
        }
      },
    },
  },

]
); 
*/


/*
Exercício 2 : Utilizando o novo campo idade , conte quantos clientes têm entre 18 e 25 anos.
 db.clientes.aggregate([
  {
    $set: {
      "idade": {
        $floor: {
          $divide: [
            {
              $subtract: [
                new Date(),
                "$dataNascimento",
              ],
            },
            86400000 * 365,
          ],
        }
      },
    },
  },
  {
    $match: {
      $and: [
        {
          idade: {
            $gte: 18,
          }
        },
        {
          idade: {
            $lte: 25,
          }
        }
      ]
    }
  },
  {
    $group: {
      _id: null,
      count: {
        $sum: 1,
      },
    },
  },
]);  */

/*
Exercício 3 : Remova os estágios $count e $match do exercício anterior e adicione um estágio no pipeline que coloque as compras do cliente no campo compras .
db.clientes.aggregate([
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras'
    },
  },
]);
 */

/* 
Exercício 4 : Selecione TODOS os clientes que compraram entre Junho de 2019 e Março de 2020 .
Exercício 5 : Confira o número de documentos retornados pelo pipeline com o método itcount() . Até aqui, você deve ter 486 documentos sendo retornados.
Exercício 6 : Ainda nesse pipeline , descubra os 5 estados com mais compras.
 */
 
/*  db.clientes.aggregate([
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras'
    }
  },
  {
    $match: {
      "compras.dataVenda": {
        $gte: ISODate('2019-06-01'),
        $lte: ISODate('2020-03-31')
      }
    },
  },
  {
    $addFields: {
      totalCompras: {
        $size: "$compras",
      },
    },
  },
  {
    $sort: {
      compras: -1,
    },
  },
  {
    $unwind: "$compras",
  },
  {
    $group: {
      _id: "$endereco.uf",
      compras: {
        $sum: 1,
      },
    },
  },
  {
    $limit: 5
  },
]); */


